<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--	
	mybatis-userservice-mapping.xml : SQL 를 갖는 설정화일 (MetaData) 
	- MyBatis Framework 은 XML MetaData를 사용 SQL구문을 관리하며,
	  (SQL은 xml 을 통해 적절히 캡슐화 되어 애플리케이선 의 외부로 분리함)
	- SQL문의 입력(?) / 출력(?)을 매핑한다.  <== 아래의 select element 참조
 -->
 
<!-- SQL definition -->
<mapper namespace="UserMapper">
	<!-- Application에서 User.getUserList id로 아래의 SQL을 참조 할 수 있다. -->
	<!-- 입력(?) / 출력(?) 관리의 이해
	 	- 아래의 query 수행 후 결과 resultType attribute에 선언된 UserVO 객체 Field(property)에 자동연결(?,자동 바인딩)
	 	- SQL/Query 의 별칭(Alias)와 UserVO객체의 Field 의 변수이름이 동일한 것 확인. -->
 	
	<!-- id=getUserList -->
	<!-- SELECT에서 컬럼명과 필드명이 다르면 값을 못받아온다...Alias 사용해서 문제 해결 
	select 절에서의 컬럼이름은 vo alias 이름과 상호 호환된다.
	user_id ====   setUserId() | getUserId()     X
	userId  ====   setUserId() | getUserId()     O
	
	바디테이블의 컬럼명과 vo클래스의 필드명을 일치시키는 것이 좋다
	만약에 컬럼명과 필드명이 일치하지 않는 경우에는
	컬럼의 alias를 필드명으로 해주어야 값이 null로 나오는 것을 방지할 수 있다. -->
	
	<select id="getUserList" resultType="user"> <!-- resultType: 제네릭 -->
		SELECT
		user_id AS userId, 
		user_name AS userName, 
		password, 
		age, 
		grade, 
		reg_date AS regDate
		FROM users
	
	</select>

	
</mapper>